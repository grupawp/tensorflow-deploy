// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import app "github.com/grupawp/tensorflow-deploy/app"
import context "context"
import io "io"
import mock "github.com/stretchr/testify/mock"

// ModuleStorage is an autogenerated mock type for the ModuleStorage type
type ModuleStorage struct {
	mock.Mock
}

// ReadModule provides a mock function with given fields: ctx, moduleID, version
func (_m *ModuleStorage) ReadModule(ctx context.Context, moduleID app.ServableID, version int) ([]byte, error) {
	ret := _m.Called(ctx, moduleID, version)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID, int) []byte); ok {
		r0 = rf(ctx, moduleID, version)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, app.ServableID, int) error); ok {
		r1 = rf(ctx, moduleID, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveModule provides a mock function with given fields: ctx, id, version
func (_m *ModuleStorage) RemoveModule(ctx context.Context, id app.ServableID, version int64) error {
	ret := _m.Called(ctx, id, version)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID, int64) error); ok {
		r0 = rf(ctx, id, version)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveModule provides a mock function with given fields: ctx, moduleID, version, archive
func (_m *ModuleStorage) SaveModule(ctx context.Context, moduleID app.ServableID, version int, archive io.Reader) error {
	ret := _m.Called(ctx, moduleID, version, archive)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID, int, io.Reader) error); ok {
		r0 = rf(ctx, moduleID, version, archive)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
