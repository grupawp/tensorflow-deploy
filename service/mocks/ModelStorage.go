// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import app "github.com/grupawp/tensorflow-deploy/app"
import context "context"
import io "io"
import mock "github.com/stretchr/testify/mock"

import storage "github.com/grupawp/tensorflow-deploy/storage"

// ModelStorage is an autogenerated mock type for the ModelStorage type
type ModelStorage struct {
	mock.Mock
}

// ReadAllModels provides a mock function with given fields: ctx, modelID
func (_m *ModelStorage) ReadAllModels(ctx context.Context, modelID app.ServableID) ([]byte, error) {
	ret := _m.Called(ctx, modelID)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID) []byte); ok {
		r0 = rf(ctx, modelID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, app.ServableID) error); ok {
		r1 = rf(ctx, modelID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReadModel provides a mock function with given fields: ctx, modelID, version
func (_m *ModelStorage) ReadModel(ctx context.Context, modelID app.ServableID, version int) ([]byte, error) {
	ret := _m.Called(ctx, modelID, version)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID, int) []byte); ok {
		r0 = rf(ctx, modelID, version)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, app.ServableID, int) error); ok {
		r1 = rf(ctx, modelID, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveModel provides a mock function with given fields: ctx, id, version
func (_m *ModelStorage) RemoveModel(ctx context.Context, id app.ServableID, version int64) error {
	ret := _m.Called(ctx, id, version)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID, int64) error); ok {
		r0 = rf(ctx, id, version)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveModel provides a mock function with given fields: ctx, modelID, version, archive
func (_m *ModelStorage) SaveModel(ctx context.Context, modelID app.ServableID, version int, archive io.Reader) (*storage.SaveModelResponse, error) {
	ret := _m.Called(ctx, modelID, version, archive)

	var r0 *storage.SaveModelResponse
	if rf, ok := ret.Get(0).(func(context.Context, app.ServableID, int, io.Reader) *storage.SaveModelResponse); ok {
		r0 = rf(ctx, modelID, version, archive)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.SaveModelResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, app.ServableID, int, io.Reader) error); ok {
		r1 = rf(ctx, modelID, version, archive)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
